#!/bin/bash
set -e
set -o pipefail

# based on https://github.com/docker-library/postgres/blob/master/9.5/docker-entrypoint.sh

if [ -d "$POSTGRES_HOME" -a "$(stat -c '%U' "$POSTGRES_HOME" 2>/dev/null)" = "root" ]; then
  chown postgres "$POSTGRES_HOME"
  chmod o-rwx "$POSTGRES_HOME"
fi

if [ "$1" = 'postgres' ]; then
  export PGDATA="$POSTGRES_HOME/data"

  mkdir -p /var/run/postgresql
  chown -R postgres /var/run/postgresql

  # look specifically for PG_VERSION, as it is expected in the DB dir
  if [ ! -s "$PGDATA/PG_VERSION" ]; then
    chroot --userspec=postgres / initdb

    echo "ALTER USER postgres WITH SUPERUSER PASSWORD '$POSTGRES_PASSWORD';" | chroot --userspec=postgres / postgres --single -j

    # internal start of server in order to allow set-up using psql-client
    # does not listen on TCP/IP and waits until start finishes
    chroot --userspec=postgres / pg_ctl -D "$PGDATA" \
      -o "-c listen_addresses=''" \
      -w start
    echo
    for f in /initdb.d/*; do
      case "$f" in
        *.sql)  echo "- running $f"; psql -v ON_ERROR_STOP=1 --username postgres < "$f"; echo ;;
        *)      echo "- ignoring $f" ;;
      esac
      echo
    done
    chroot --userspec=postgres / pg_ctl -D "$PGDATA" -m fast -w stop


    {
      echo;
      echo "host all all     10.0.0.0/8 md5";
      echo "host all all  172.16.0.0/12 md5";
      echo "host all all 192.168.0.0/16 md5";
    } >> "$PGDATA/pg_hba.conf"
    {
      echo;
      echo "listen_addresses = '*'";
      echo "include_if_exists = '/etc/postgresql/overrides.conf'";
    } >> "$PGDATA/postgresql.conf"

    echo
    echo "PostgreSQL init process complete; ready for start up."
    echo
  fi

  exec chroot --userspec=postgres / "$@"
else
  exec "$@"
fi
