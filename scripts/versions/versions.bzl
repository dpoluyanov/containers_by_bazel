NGINX_VERSION = "1.15.8-1"
NGINX_DEB_VERSION = NGINX_VERSION + "~stretch"

NODEJS_VERSION = "10.15.1"
YARN_VERSION = "1.13.0"

ZULU_8_VERSION = "8.35.0.3"
JAVA_8_VERSION = "8.0.202"
ZULU_11_VERSION = "11.29+3"
JAVA_11_VERSION = "11.0.2"
JAVA_VERSION = JAVA_8_VERSION

ZOOKEEPER_VERSION = "3.4.13"
KAFKA_VERSION = "2.0.1"

ELASTICSEARCH_VERSION = "6.3.2"

KIBANA_VERSION = "6.3.2"

SBT_VERSION = "1.2.7"

POSTGRESQL_MINOR_VERSION = "11"
POSTGRESQL_VERSION = POSTGRESQL_MINOR_VERSION + "." + "1-3"
POSTGRESQL_DEB_VERSION = POSTGRESQL_VERSION + "." + "pgdg90+1"
POSTGIS_MINOR_VERSION = "2.5"
POSTGIS_VERSION = POSTGIS_MINOR_VERSION + ".1"
POSTGIS_CONTAINER_VERSION = POSTGRESQL_VERSION + "-" + POSTGIS_VERSION
POSTGIS_DEB_VERSION = POSTGIS_VERSION + "+dfsg-1.pgdg90+1"
POSTGIS_POSTGRESQL_DEB_VERSION = POSTGIS_DEB_VERSION

REDIS_VERSION = "3.2.6-3"
REDIS_DEB_VERSION = REDIS_VERSION + "+deb9u2"

TOMCAT8_VERSION = "8.5.14-1"
TOMCAT8_DEB_VERSION = TOMCAT8_VERSION + "+deb9u3"

MAVEN_VERSION = "3.5.4"

PHP_VERSION = "7.0.33-0"
PHP_DEB_VERSION = PHP_VERSION + "+deb9u1"

PROMETHEUS_VERSION = "2.4.3"
PROMETHEUS_JMX_JAVAAGENT = "0.3.1"

GRAFANA_VERSION = "5.4.2"
GRAFANA_DEB_VERSION = GRAFANA_VERSION

CASSANDRA_VERSION = "3.11.3"
CASSANDRA_DEB_VERSION = CASSANDRA_VERSION

NEXUS_VERSION = "2.14.11-01"

GERRIT_VERSION = "2.16.4"

DNSMASQ_VERSION = "2.76-5"
DNSMASQ_DEB_VERSION = DNSMASQ_VERSION + "+deb9u1"

ERLANG_VERSION = "20.3-1"
ERLANG_DEB_VERSION = ERLANG_VERSION + ""

RABBITMQ_VERSION = "3.7.8"

EJABBERD_VERSION = "18.06"

ZIPKIN_VERSION = "2.11.4"

JENKINS_VERSION = "2.150.2"
JENKINS_SWARM_VERSION = "3.14"

JASPERREPORTS_SERVER_VERSION = "6.4.2"

PENATHO_DI_VERSION = "7.1.0.0-12"

def _version_shell_script_impl(ctx):
  # (.+)=(%\{.+\})   =>   "$2": $1,
  ctx.template_action(
    template=ctx.file._template,
    substitutions={
      "%{NGINX_VERSION}": NGINX_VERSION,
      "%{NGINX_DEB_VERSION}": NGINX_DEB_VERSION,
      "%{NODEJS_VERSION}": NODEJS_VERSION,
      "%{YARN_VERSION}": YARN_VERSION,
      "%{ZULU_8_VERSION}": ZULU_8_VERSION,
      "%{JAVA_8_VERSION}": JAVA_8_VERSION,
      "%{ZULU_11_VERSION}": ZULU_11_VERSION,
      "%{JAVA_11_VERSION}": JAVA_11_VERSION,
      "%{JAVA_VERSION}": JAVA_VERSION,
      "%{ZOOKEEPER_VERSION}": ZOOKEEPER_VERSION,
      "%{KAFKA_VERSION}": KAFKA_VERSION,
      "%{ELASTICSEARCH_VERSION}": ELASTICSEARCH_VERSION,
      "%{SBT_VERSION}": SBT_VERSION,
      "%{POSTGRESQL_MINOR_VERSION}": POSTGRESQL_MINOR_VERSION,
      "%{POSTGRESQL_VERSION}": POSTGRESQL_VERSION,
      "%{POSTGRESQL_DEB_VERSION}": POSTGRESQL_DEB_VERSION,
      "%{POSTGIS_MINOR_VERSION}": POSTGIS_MINOR_VERSION,
      "%{POSTGIS_VERSION}": POSTGIS_VERSION,
      "%{POSTGIS_CONTAINER_VERSION}": POSTGIS_CONTAINER_VERSION,
      "%{POSTGIS_DEB_VERSION}": POSTGIS_DEB_VERSION,
      "%{POSTGIS_POSTGRESQL_DEB_VERSION}": POSTGIS_POSTGRESQL_DEB_VERSION,
      "%{REDIS_VERSION}": REDIS_VERSION,
      "%{REDIS_DEB_VERSION}": REDIS_DEB_VERSION,
      "%{TOMCAT8_VERSION}": TOMCAT8_VERSION,
      "%{TOMCAT8_DEB_VERSION}": TOMCAT8_DEB_VERSION,
      "%{MAVEN_VERSION}": MAVEN_VERSION,
      "%{PHP_VERSION}": PHP_VERSION,
      "%{PHP_DEB_VERSION}": PHP_DEB_VERSION,
      "%{PROMETHEUS_VERSION}": PROMETHEUS_VERSION,
      "%{GRAFANA_VERSION}": GRAFANA_VERSION,
      "%{GRAFANA_DEB_VERSION}": GRAFANA_DEB_VERSION,
      "%{CASSANDRA_VERSION}": CASSANDRA_VERSION,
      "%{CASSANDRA_DEB_VERSION}": CASSANDRA_DEB_VERSION,
      "%{NEXUS_VERSION}": NEXUS_VERSION,
      "%{GERRIT_VERSION}": GERRIT_VERSION,
      "%{DNSMASQ_VERSION}": DNSMASQ_VERSION,
      "%{DNSMASQ_DEB_VERSION}": DNSMASQ_DEB_VERSION,
      "%{ERLANG_VERSION}": ERLANG_VERSION,
      "%{ERLANG_DEB_VERSION}": ERLANG_DEB_VERSION,
      "%{RABBITMQ_VERSION}": RABBITMQ_VERSION,
      "%{EJABBERD_VERSION}": EJABBERD_VERSION,
      "%{ZIPKIN_VERSION}": ZIPKIN_VERSION,
      "%{JENKINS_VERSION}": JENKINS_VERSION,
      "%{JENKINS_SWARM_VERSION}": JENKINS_SWARM_VERSION,
      "%{JASPERREPORTS_SERVER_VERSION}": JASPERREPORTS_SERVER_VERSION,
      "%{PENATHO_DI_VERSION}": PENATHO_DI_VERSION,
    },
    output=ctx.outputs.script
  )

version_shell_script = rule(
  implementation=_version_shell_script_impl,
  attrs={
    "_template": attr.label(
      default=Label("//scripts/versions:template"),
      single_file=True,
      allow_files=True)
  },
  outputs={
    "script": "%{name}.sh"
  },
)
